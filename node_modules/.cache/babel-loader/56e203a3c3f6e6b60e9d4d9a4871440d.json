{"ast":null,"code":"var _jsxFileName = \"/Users/margaritadanshina/example-repository/escape-quiz/the-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport React, { useState } from 'react'; //import Quiz from './Quiz'\n\nimport Start from './components/Start';\nimport { Button } from './styled-components'; //let interval;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const quiz = [{\n    question: 'In which year did you escape?',\n    answers: [{\n      answer: '1997',\n      id: 'NY',\n      value: 1\n    }, {\n      answer: '2013',\n      id: 'LA',\n      value: 1\n    }]\n  }, {\n    question: 'What caused the root of all of the chaos?',\n    answers: [{\n      answer: 'An earthquake',\n      id: 'LA',\n      value: 1\n    }, {\n      answer: 'World War 3',\n      id: 'NY',\n      value: 1\n    }]\n  }, {\n    question: 'The president tries to stop an invasion from where?',\n    answers: [{\n      answer: 'Cuba',\n      id: 'LA',\n      value: 1\n    }, {\n      answer: 'Soviet Union',\n      id: 'NY',\n      value: 1\n    }]\n  }, {\n    question: 'Where was an island converted into a prison?',\n    answers: [{\n      answer: 'LA',\n      id: 'LA',\n      value: 1\n    }, {\n      answer: 'Manhattan',\n      id: 'NY',\n      value: 1\n    }]\n  }, {\n    question: 'Warning.. SPOILER ALERT: At the end of the movie, the main character Snake, does what?',\n    answers: [{\n      answer: 'Puffs a cigarette while going into the darkness',\n      id: 'NY',\n      value: 1\n    }, {\n      answer: 'Picks a cigarette box labelled “American Spirit”',\n      id: 'LA',\n      value: 1\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showMessage, setShowMessage] = useState(false);\n  const [scoreNY, setScoreNY] = useState(0);\n  const [scoreLA, setScoreLA] = useState(0);\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval(() => {\n      setTimeout(prevTime => prevTime + 1);\n    }, 1000);\n  };\n\n  const handleAnswerClick = id => {\n    if (id === 'LA') {\n      setScoreLA(scoreLA + 1);\n    } else if (id === 'NY') {\n      setScoreNY(scoreNY + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowMessage(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"\\u201CCongrats, you are a survivor!  You just escaped from New York $\", scoreNY, \" or Los Angeles $\", scoreLA, \"\\u201D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-section\",\n      children: quiz[currentQuestion].answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerClick(answer.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"/nh/2ktgVo2dhzWfu4vZlfu8KdI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/margaritadanshina/example-repository/escape-quiz/the-app/src/App.js"],"names":["React","useState","Start","Button","App","quiz","question","answers","answer","id","value","currentQuestion","setCurrentQuestion","showMessage","setShowMessage","scoreNY","setScoreNY","scoreLA","setScoreLA","quizStartHandler","setStep","interval","setInterval","setTimeout","prevTime","handleAnswerClick","nextQuestion","length","map"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport React, { useState } from 'react';\n//import Quiz from './Quiz'\nimport Start from './components/Start'\nimport { Button } from './styled-components'\n\n//let interval;\n\nconst App= () => {\n\n  const quiz = [\n    {\n      question: 'In which year did you escape?',\n      answers: [\n        {answer: '1997', id: 'NY', value: 1},\n        {answer: '2013', id: 'LA', value: 1},\n      ]\n    },\n    {\n      question: 'What caused the root of all of the chaos?',\n      answers: [\n        {answer: 'An earthquake', id: 'LA', value: 1},\n        {answer: 'World War 3', id: 'NY', value: 1},\n      ]\n    },\n    {\n      question: 'The president tries to stop an invasion from where?',\n      answers: [\n        {answer: 'Cuba', id: 'LA', value: 1},\n        {answer: 'Soviet Union', id: 'NY', value: 1}\n      ]\n    },\n    {\n      question: 'Where was an island converted into a prison?',\n      answers: [\n        {answer: 'LA', id: 'LA', value: 1},\n        {answer: 'Manhattan', id: 'NY', value: 1}\n      ]\n    },\n    {\n      question: 'Warning.. SPOILER ALERT: At the end of the movie, the main character Snake, does what?',\n      answers: [\n        {answer: 'Puffs a cigarette while going into the darkness', id: 'NY', value: 1},\n        {answer: 'Picks a cigarette box labelled “American Spirit”', id: 'LA', value: 1},\n      ]\n    }\n  ]\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showMessage, setShowMessage] = useState(false);\n  const [scoreNY, setScoreNY] = useState(0);\n  const [scoreLA, setScoreLA] = useState(0);\n\n  const quizStartHandler = () => {\n      setStep(2);\n      interval = setInterval(() => {\n          setTimeout(prevTime => prevTime + 1)\n      }, 1000);\n  }\n\n  const handleAnswerClick = (id) => {\n    if (id === 'LA') {\n      setScoreLA(scoreLA + 1);\n    } else if (id === 'NY') {\n      setScoreNY(scoreNY + 1)\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if(nextQuestion < quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowMessage(true)\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n           {showMessage \n           ? (<div className='score-section'>\n               “Congrats, you are a survivor!  You just escaped from New York ${scoreNY} or Los Angeles ${scoreLA}”\n              </div>\n              ) : (\n            <div className='answer-section'>\n              {quiz[currentQuestion].answers.map((answer) => (\n                <button onClick={() => handleAnswerClick(answer.id)}></button>\n              ))}\n            </div>\n           )}\n      </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}